name: Master

#on:
#  push:
#    branches:
#      - master
on: pull_request


jobs:
  get-publish-version:
    runs-on: ubuntu-latest
    outputs:
      publish-version: ${{ steps.get-publish-version.outputs.publish-version }}
    steps:
      - name: Get publish version
        id: get-publish-version
        run: |
          LATEST_VERSION=$(curl --silent "https://api.github.com/repos/${{ github.repository }}/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          [  -z "$LATEST_VERSION" ] && LATEST_VERSION="0.0.0"
          VERSION=$(echo $LATEST_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          echo "::set-output name=publish-version::${VERSION}"
  publish-github-release:
    runs-on: ubuntu-latest
    needs: [get-publish-version, publish-docker]
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.get-publish-version.outputs.publish-version }}
          release_name: Release ${{ needs.get-publish-version.outputs.publish-version }}
          draft: false
          prerelease: false

  publish-docker:
    runs-on: ubuntu-latest
    needs: [get-publish-version]
    strategy:
      fail-fast: false
      matrix:
        image: [prom-pushgateway, guacd, hue, azkaban-executor, azkaban-webserver, s3fs, livy-proxy]
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 0
      - uses: marceloprado/has-changed-path@v1
        id: has-changed
        with:
          paths: ${{ matrix.image }}/**
      - name: Publish to DockerHub
        uses: elgohr/Publish-Docker-Github-Action@191af57e15535d28b83589e3b5f0c31e76aa8733 #v3.0.4 hardcoded for security DW-5986, review regularly
        if: steps.has-changed.outputs.changed == 'true'
        with:
          name: dwpdigital/${{ matrix.image }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          tags: "latest, ${{ needs.get-publish-version.outputs.publish-version }}"
          tag_semver: true
          dockerfile: ${{ matrix.image }}/Dockerfile
          context: ${{ matrix.image }}

  snyk-monitor:
    runs-on: ubuntu-latest
    needs: publish-docker
    strategy:
      fail-fast: false
      matrix:
        image: [prom-pushgateway, guacd, hue, azkaban-executor, azkaban-webserver, s3fs, livy-proxy]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: marceloprado/has-changed-path@v1
        id: has-changed
        with:
          paths: ${{ matrix.image }}/**
      - name: Run Snyk monitoring
        if: steps.has-changed.outputs.changed == 'true'
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          image: dwpdigital/${{ matrix.image }}
          args: --file=${{ matrix.image }}/Dockerfile --policy-path=./.snyk --org=dwp-dataworks
